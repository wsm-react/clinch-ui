// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id           String     @id @default(uuid()) @db.Uuid
  email        String     @unique
  name         String?
  hashPassword String     @map("hash_password")
  posts        BlogPost[]
  updatedAt    DateTime   @updatedAt @map("updated_at")
  createdAt    DateTime   @default(now()) @map("created_at")
}

model BlogPost {
  id        String     @id @default(uuid()) @db.Uuid
  slug      String     @unique
  title     String
  body      String
  published Boolean
  author    User       @relation(fields: [authorId], references: [id])
  authorId  String     @map("author_id") @db.Uuid
  comments  Comment[]
  updatedAt DateTime   @updatedAt @map("updated_at")
  createdAt DateTime   @default(now()) @map("created_at")
}

model Comment {
  id        String   @id @default(uuid()) @db.Uuid
  comment   String
  post      BlogPost @relation(fields: [postId], references: [id])
  postId    String   @db.Uuid
  updatedAt DateTime @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")
}


// Address is an embedded document
// type address {
//   street  String
//   city    String
//   state   String
//   pincode String
// }
